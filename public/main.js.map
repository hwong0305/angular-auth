{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/dashboard/dashboard.component.css","webpack:///./src/app/component/dashboard/dashboard.component.html","webpack:///./src/app/component/dashboard/dashboard.component.ts","webpack:///./src/app/component/home/home.component.css","webpack:///./src/app/component/home/home.component.html","webpack:///./src/app/component/home/home.component.ts","webpack:///./src/app/component/login/login.component.css","webpack:///./src/app/component/login/login.component.html","webpack:///./src/app/component/login/login.component.ts","webpack:///./src/app/component/nav/nav.component.css","webpack:///./src/app/component/nav/nav.component.html","webpack:///./src/app/component/nav/nav.component.ts","webpack:///./src/app/component/register/register.component.css","webpack:///./src/app/component/register/register.component.html","webpack:///./src/app/component/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/authguard.service.ts","webpack:///./src/app/services/profile.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/stores/actions/auth.ts","webpack:///./src/stores/reducers/auth.ts","webpack:///./src/stores/reducers/index.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,wL;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,QAAQ,CAAC;IACnB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP8B;AACG;AACb;AACW;AACf;AACC;AAEI;AAEC;AACc;AACe;AACT;AACH;AACe;AAEf;AAEhE,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAE,WAAW,EAAC,CAAC,6EAAgB,CAAC,EAAC;CACtF;AAqBD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yEAAY;gBACZ,wFAAiB;gBACjB,gFAAc;gBACd,6EAAa;gBACb,4FAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,uDAAW,CAAC,OAAO,CAAC,yDAAQ,CAAC;aAC9B;YACD,SAAS,EAAE,CAAC,6EAAgB,CAAC;YAC7B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7CtB,mB;;;;;;;;;;;ACAA,6kB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACN;AACS;AAEW;AAOhE;IAOE,4BACU,KAAgC,EAChC,cAA8B;QAD9B,UAAK,GAAL,KAAK,CAA2B;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAPxC,UAAK,GAAW;YACZ,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACZ,CAAC;IAIC,CAAC;IAEJ,qCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK;aACP,IAAI,CAAC,0DAAM,CAAC,4DAAoB,CAAC,CAAC;aAClC,SAAS,CAAC,eAAK,IAAI,QAAC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAE7C,IAAI,CAAC,cAAc;aAChB,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;aACvB,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAAC,CAAC;IAC1C,CAAC;IApBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCASiB,iDAAK;YACI,wEAAc;OAT7B,kBAAkB,CAqB9B;IAAD,yBAAC;CAAA;AArB8B;;;;;;;;;;;;ACX/B,sBAAsB,yBAAyB,GAAG,C;;;;;;;;;;;ACAlD,ipB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACN;AACS;AAQrD;IAEE,uBAAoB,KAAgC;QAAhC,UAAK,GAAL,KAAK,CAA2B;IAAI,CAAC;IAIzD,gCAAQ,GAAR;QAAA,iBAKC;QAJG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,+DAAuB,CAAC,CAAC;aAC7C,SAAS,CACN,kBAAQ,IAAI,YAAI,CAAC,SAAS,GAAG,QAAQ,EAAzB,CAAyB,CACxC;IACP,CAAC;IAXU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG2B,iDAAK;OAFrB,aAAa,CAazB;IAAD,oBAAC;CAAA;AAbyB;;;;;;;;;;;;ACV1B,sBAAsB,yBAAyB,GAAG,C;;;;;;;;;;;ACAlD,oyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACL;AAEwB;AAEF;AAO1D;IAME,wBACY,WAAwB,EACxB,MAAc,EACd,KAAgC;QAFhC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAA2B;QAR5C,SAAI,GAAa;YACf,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb,CAAC;IAMK,CAAC;IAER,iCAAQ,GAAR,cAAY,CAAC;IAEb,iCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAChD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0DAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC5D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAnBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQyB,kEAAW;YAChB,sDAAM;YACP,iDAAK;OATb,cAAc,CAoB1B;IAAD,qBAAC;CAAA;AApB0B;;;;;;;;;;;;ACb3B,mB;;;;;;;;;;;ACAA,ywB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACN;AACH;AACY;AACO;AAO5D;IAGE,sBACU,KAAgC,EAChC,MAAc;QADd,UAAK,GAAL,KAAK,CAA2B;QAChC,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ,+BAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,KAAK;aACP,IAAI,CAAC,0DAAM,CAAC,+DAAuB,CAAC,CAAC;aACrC,SAAS,CAAC,kBAAQ,IAAI,QAAC,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,EAA3B,CAA2B,CAAC,CAAC;IACxD,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2DAAkB,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAjBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAKiB,iDAAK;YACJ,sDAAM;OALb,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;ACXzB,sBAAsB,yBAAyB,GAAG,C;;;;;;;;;;;ACAlD,wmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAET;AAEiB;AAO1D;IAQE,2BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAPpE,SAAI,GAAS;YACX,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAEqE,CAAC;IAExE,oCAAQ,GAAR,cAAY,CAAC;IAEb,oCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACrD,KAAK,CAAC,mCAAmC,CAAC,CAAC;YAC3C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAjBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCASiC,kEAAW,EAAkB,sDAAM;OARzD,iBAAiB,CAkB7B;IAAD,wBAAC;CAAA;AAlB6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACoB;AAI/D,IAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACrB,cAAc,EAAE,kBAAkB;KACrC,CAAC;CACL,CAAC;AAUF;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,8BAAQ,GAAR,UAAS,IAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,gBAAgB,EAAE,IAAI,EAAE,WAAW,CAAC;IAC5E,CAAC;IAED,2BAAK,GAAL,UAAM,IAAa;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,aAAa,EAAE,IAAI,EAAE,WAAW,CAAC;IACzE,CAAC;IAVU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,WAAW,CAWvB;IAAD,kBAAC;CAAA;AAXuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBmB;AAEC;AACM;AACT;AAEa;AAEtD,IAAM,MAAM,GAAG,IAAI,mEAAgB,EAAE,CAAC;AAMtC;IAGE,0BACY,KAAgC,EAChC,MAAc;QADd,UAAK,GAAL,KAAK,CAA2B;QAChC,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE9B,sCAAW,GAAX;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK;aACP,IAAI,CAAC,0DAAM,CAAC,4DAAoB,CAAC,CAAC;aAClC,SAAS,CAAC,eAAK,IAAI,QAAC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAC;QAE7C,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,oCAAoC;YACpC,OAAO,IAAI,CAAC;SACf;IACH,CAAC;IAnBU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAKmB,iDAAK;YACJ,sDAAM;OALf,gBAAgB,CAoB5B;IAAD,uBAAC;CAAA;AApB4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACdc;AACoB;AAK/D;IACE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,mCAAU,GAAV,UAAW,KAAK;QACd,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,KAAK;aACrB;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IACtD,CAAC;IAZU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE0B,+DAAU;OADzB,cAAc,CAa1B;IAAD,qBAAC;CAAA;AAb0B;;;;;;;;;;;;;ACN3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;ACTlC;AAAA;AAAA;AAAA;AAAA,IAAY,eAGX;AAHD,WAAY,eAAe;IACvB,yCAAsB;IACtB,2CAAwB;AAC5B,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AAED;IAGI,eAAmB,OAAO;QAAP,YAAO,GAAP,OAAO;QAFjB,SAAI,GAAG,eAAe,CAAC,KAAK,CAAC;IAET,CAAC;IAClC,YAAC;AAAD,CAAC;;AAED;IAAA;QACa,SAAI,GAAG,eAAe,CAAC,MAAM,CAAC;IAC3C,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfkE;AAO5D,IAAM,YAAY,GAAU;IAC/B,QAAQ,EAAE,KAAK;IACf,KAAK,EAAE,IAAI;CACd;AAEM,iBAAiB,KAAoB,EAAE,MAAuB;IAA7C,4CAAoB;IACxC,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,6DAAe,CAAC,KAAK,CAAC,CAAC;YACxB,oBACO,KAAK,IACR,QAAQ,EAAE,IAAI,EACd,KAAK,EAAE,MAAM,CAAC,OAAO,IACvB;SACL;QACD,KAAK,6DAAe,CAAC,MAAM,CAAC,CAAC;YACzB,OAAO,YAAY,CAAC;SACvB;QACD,OAAO,CAAC,CAAC;YACL,OAAO,KAAK,CAAC;SAChB;KACJ;AACL,CAAC;AAEM,IAAM,WAAW,GAAG,UAAC,KAAY,IAAK,YAAK,CAAC,QAAQ,EAAd,CAAc,CAAC;AACrD,IAAM,QAAQ,GAAG,UAAC,KAAY,IAAK,YAAK,CAAC,KAAK,EAAX,CAAW,CAAC;;;;;;;;;;;;;AC/BtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIqB;AACc;AAM5B,IAAM,QAAQ,GAAgC;IACjD,IAAI,EAAE,6CAAgB;CACzB;AAEM,IAAM,eAAe,GAAG,yEAAqB,CAAiB,MAAM,CAAC,CAAC;AAEtE,IAAM,cAAc,GAAG,kEAAc,CAAC,eAAe,EAAE,iDAAoB,CAAC,CAAC;AAC7E,IAAM,WAAW,GAAG,kEAAc,CAAC,eAAe,EAAE,8CAAiB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<div class=\\\"container mt-4\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { reducers } from '../stores/reducers';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './component/nav/nav.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\n\nimport { AuthguardService } from './services/authguard.service';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: 'dashboard', component: DashboardComponent, canActivate:[AuthguardService]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    StoreModule.forRoot(reducers)\n  ],\n  providers: [AuthguardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <h2>Profile Dashboard</h2>\\n    <div class=\\\"form-group\\\">\\n        <label>Name</label>\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"user$.name\\\" name=\\\"name\\\" readonly>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Username</label>\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"user$.username\\\" name=\\\"username\\\" readonly>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>E-mail</label>\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"user$.email\\\" name=\\\"email\\\" readonly>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromAuth from '../../../stores/reducers';\n\nimport { ProfileService } from '../../services/profile.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  token$: String;\n  user$: Object = {\n      name: '',\n      username: '',\n      email: ''\n  };\n  constructor(\n    private store: Store<fromAuth.AuthState>,\n    private profileService: ProfileService\n  ) {}\n\n  ngOnInit() {\n    this.store\n      .pipe(select(fromAuth.selectToken))\n      .subscribe(token => (this.token$ = token));\n\n    this.profileService\n      .getProfile(this.token$)\n      .subscribe(user => this.user$ = user);\n  }\n}\n","module.exports = \"h1 {\\n    text-align: center;\\n}\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <h1>MEAN Auth Application</h1>\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <h2>Express.JS</h2>\\n            <p>A fast, unopinionated, minimalstic web framework for <code>Node.JS</code></p>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <h2>Angular-CLI</h2>\\n            <p>This is a Command Line Interface for building the framework for Angular Applications.</p>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <h2>MongoDB</h2>\\n            <p>A very common NoSQL database.</p>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromAuth from '../../../stores/reducers';\nimport * as AuthActions from '../../../stores/actions/auth';    \n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private store: Store<fromAuth.AuthState>) { }\n\n  loggedIn$: boolean;\n\n  ngOnInit() {\n      this.store.pipe(select(fromAuth.selectLoggedIn))\n        .subscribe(\n            response => this.loggedIn$ = response\n        )\n  }\n\n}\n","module.exports = \"h1 {\\n    text-align: center;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n        <div class=\\\"jumbotron\\\">\\n            <h1>Login</h1>\\n        </div>\\n        <form>\\n            <div class=\\\"form-group\\\">\\n                <label>Username</label>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\">\\n            </div>\\n            <div class=\\\"mx-auto text-center\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Login</button>\\n            </div>\\n        </form>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport * as fromAuth from '../../../stores/reducers';\nimport * as AuthActions from '../../../stores/actions/auth';\nimport { UserAuth } from '../../../User';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: UserAuth = {\n    username: '',\n    password: ''\n  };\n\n  constructor(\n      private authService: AuthService,\n      private router: Router,\n      private store: Store<fromAuth.AuthState>\n      ) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    this.authService.login(this.user).subscribe(response => {\n        this.store.dispatch(new AuthActions.Login(response.token))\n      this.router.navigate(['/dashboard']);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"navbar navbar-dark bg-dark shadow-sm\\\">\\n    <div class=\\\"navbar-left\\\">\\n        <a routerLink=\\\"/home\\\" class=\\\"navbar-brand align-items-center\\\">\\n            <strong>Angular Auth</strong>\\n        </a>\\n    </div>\\n    <div class=\\\"navbar-right btn-group\\\">\\n        <a routerLink=\\\"/home\\\" class=\\\"btn btn-outline-light\\\" routerLinkActive=\\\"active\\\">Home</a>\\n        <a *ngIf=\\\"!loggedIn$\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-outline-light\\\" routerLinkActive=\\\"active\\\">Register</a>\\n        <a *ngIf=\\\"!loggedIn$\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-outline-light\\\" routerLinkActive=\\\"active\\\">Login</a>\\n        <button *ngIf=\\\"loggedIn$\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-outline-light\\\">Logout</button>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport * as fromAuth from '../../../stores/reducers';\nimport * as AuthActions from '../../../stores/actions/auth';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  loggedIn$: boolean;\n\n  constructor(\n    private store: Store<fromAuth.AuthState>,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.store\n      .pipe(select(fromAuth.selectLoggedIn))\n      .subscribe(response => (this.loggedIn$ = response));\n  }\n\n  logout() {\n    this.store.dispatch(new AuthActions.Logout());\n    this.router.navigate(['/home']);\n  }\n}\n","module.exports = \"h1 {\\n    text-align: center;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"jumbotron\\\">\\n        <h1>Register</h1>\\n    </div>\\n    <form>\\n        <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Username</label>\\n            <input class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>E-mail</label>\\n            <input class=\\\"form-control\\\" placeholder=\\\"E-mail\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\">\\n        </div>\\n        <div class=\\\"mx-auto text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Register</button>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../../User';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: User = {\n    name: '',\n    password: '',\n    email: '',\n    username: ''\n  };\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {} \n\n  onSubmit() {\n    this.authService.register(this.user).subscribe(response => {\n      alert('You have successfully registered!');\n      this.router.navigate(['/dashboard']);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, UserAuth } from '../../User';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    })\n};\n\ninterface Authenticate {\n    user: User;\n    token: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  register(user:User): Observable<Authenticate> {\n      return this.http.post<Authenticate>('users/register', user, httpOptions)\n  }\n\n  login(user:UserAuth): Observable<Authenticate> {\n      return this.http.post<Authenticate>('users/login', user, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport * as fromAuth from '../../stores/reducers';\nimport { Router } from '@angular/router';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst helper = new JwtHelperService();\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardService implements CanActivate {\n  token$: string;\n\n  constructor(\n      private store: Store<fromAuth.AuthState>,\n      private router: Router) {}\n\n  canActivate() {\n    this.store\n      .pipe(select(fromAuth.selectToken))\n      .subscribe(token => (this.token$ = token));\n\n    if (this.token$ === null) {\n        this.router.navigate(['/login'])\n        return false;\n    } else {\n        // Need to validate the jsonwebtoken\n        return true; \n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  constructor(private http: HttpClient) {}\n\n  getProfile(token) {\n    const httpOptions = {\n      headers: {\n        'content-type': 'application/json',\n        authorization: token\n      }\n    };\n\n    return this.http.get('users/validate', httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n","import { Action } from '@ngrx/store';\n\nexport enum AuthActionTypes {\n    Login = '[Auth] Login',\n    Logout = '[Auth] Logout'\n}\n\nexport class Login implements Action {\n    readonly type = AuthActionTypes.Login;\n\n    constructor(public payload) {}\n}\n\nexport class Logout implements Action {\n    readonly type = AuthActionTypes.Logout;\n}\n\nexport type AuthActionUnion = Login | Logout","import { AuthActionUnion, AuthActionTypes } from '../actions/auth';\n\nexport interface State {\n    loggedIn: boolean,\n    token: string\n}\n\nexport const initialState: State = {\n    loggedIn: false,\n    token: null\n}\n\nexport function reducer(state = initialState, action: AuthActionUnion) {\n    switch (action.type) {\n        case AuthActionTypes.Login: {\n            return {\n                ...state,\n                loggedIn: true,\n                token: action.payload\n            };\n        }\n        case AuthActionTypes.Logout: {\n            return initialState;\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getLoggedIn = (state: State) => state.loggedIn;\nexport const getToken = (state: State) => state.token;","import {\n  createSelector,\n  createFeatureSelector,\n  ActionReducerMap\n} from '@ngrx/store';\nimport * as fromAuth from './auth';\n\nexport interface AuthState {\n    auth: fromAuth.State\n}\n\nexport const reducers: ActionReducerMap<AuthState> = {\n    auth: fromAuth.reducer\n}\n\nexport const selectAuthState = createFeatureSelector<fromAuth.State>('auth');\n\nexport const selectLoggedIn = createSelector(selectAuthState, fromAuth.getLoggedIn);\nexport const selectToken = createSelector(selectAuthState, fromAuth.getToken);"],"sourceRoot":""}